{"version":3,"sources":["file:///Users/baitengfei/code/EscapeRoom/EscapeRoomMVP/assets/Scripts/Manager/ResManager.ts"],"names":["_decorator","Component","assetManager","SpriteFrame","Prefab","TextAsset","ccclass","property","ResManager","onLoad","Instance","LoadSprite","bundleName","resName","spriteNode","bundle","getBundle","strResName","loadBundle","error","any","console","load","sprite","spriteFrame","LoadPrefab","callback","log","prefab","LoadConfig","listConfigs","content","mapArr","text","split","listPropertys","i","length","arr","obj","index","arrName","trim","parseInt","push"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Y,OAAAA,Y;AAAsBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;;;;;;;;;OACrE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;yBAGTQ,U,GADpBF,O,qBAAD,MACqBE,UADrB,SACwCP,SADxC,CACkD;AAG9CQ,QAAAA,MAAM,GAAG;AACLD,UAAAA,UAAU,CAACE,QAAX,GAAsB,IAAtB;AACH;;AAEDC,QAAAA,UAAU,CAACC,UAAD,EAAoBC,OAApB,EAAoCC,UAApC,EAAuD;AAC7D,cAAIC,MAAM,GAAGb,YAAY,CAACc,SAAb,CAAuBJ,UAAvB,CAAb;AACA,cAAIK,UAAU,GAAGJ,OAAO,GAAG,EAA3B;;AACA,cAAIE,MAAM,IAAI,IAAd,EAAoB;AAChBb,YAAAA,YAAY,CAACgB,UAAb,CAAwBN,UAAxB,EAAoC,CAACO,KAAD,EAAQC,GAAR,KAAc;AAC9C,kBAAID,KAAJ,EAAW;AACPE,gBAAAA,OAAO,CAACF,KAAR,CAAc,aAAd,EAA6BP,UAA7B;AACH,eAFD,MAGK;AACD,qBAAKD,UAAL,CAAgBC,UAAhB,EAA4BK,UAA5B,EAAwCH,UAAxC;AACH;AACJ,aAPD;AAQH,WATD,MAUK;AACDC,YAAAA,MAAM,CAACO,IAAP,CAAYL,UAAZ,EAAwBd,WAAxB,EAAqC,CAACgB,KAAD,EAAQI,MAAR,KAA6B;AAC9D,kBAAIJ,KAAJ,EAAW;AACPE,gBAAAA,OAAO,CAACF,KAAR,CAAc,aAAd,EAA6BP,UAA7B,EAAyCK,UAAzC;AACH,eAFD,MAGK;AACDH,gBAAAA,UAAU,CAACU,WAAX,GAAyBD,MAAzB;AACH;AACJ,aAPD;AAQH;AACJ;;AAEDE,QAAAA,UAAU,CAACb,UAAD,EAAoBC,OAApB,EAAoCa,QAApC,EAAkD;AACxD,cAAIX,MAAM,GAAGb,YAAY,CAACc,SAAb,CAAuBJ,UAAvB,CAAb;;AACA,cAAIG,MAAM,IAAI,IAAd,EAAoB;AAChBb,YAAAA,YAAY,CAACgB,UAAb,CAAwBN,UAAxB,EAAoC,CAACO,KAAD,EAAQC,GAAR,KAAc;AAC9C,kBAAID,KAAJ,EAAW;AACPE,gBAAAA,OAAO,CAACF,KAAR,CAAc,OAAd,EAAuBP,UAAvB;AACH,eAFD,MAGK;AACDS,gBAAAA,OAAO,CAACM,GAAR,CAAY,WAAZ,EAAyBf,UAAzB;AAEA,qBAAKa,UAAL,CAAgBb,UAAhB,EAA4BC,OAA5B,EAAqCa,QAArC;AACH;AACJ,aATD;AAUH,WAXD,MAYK;AACDX,YAAAA,MAAM,CAACO,IAAP,CAAYT,OAAZ,EAAqBT,MAArB,EAA6B,CAACe,KAAD,EAAQS,MAAR,KAAwB;AACjD,kBAAIT,KAAJ,EAAW;AACPE,gBAAAA,OAAO,CAACF,KAAR,CAAc,OAAd,EAAuBP,UAAvB,EAAmCC,OAAnC;AACH,eAFD,MAGK;AACD,oBAAIa,QAAQ,IAAI,IAAhB,EAAsB;AAClBL,kBAAAA,OAAO,CAACM,GAAR,CAAY,YAAZ,EAA0Bd,OAA1B;AACAa,kBAAAA,QAAQ,CAACE,MAAD,CAAR;AACH;AACJ;AACJ,aAVD;AAWH;AACJ;;AAEDC,QAAAA,UAAU,CAAChB,OAAD,EAAiB;AACvB,cAAIiB,WAAiB,GAAG,EAAxB;AACA,cAAIf,MAAM,GAAGb,YAAY,CAACc,SAAb,CAAuB,QAAvB,CAAb;;AACA,cAAID,MAAM,IAAI,IAAd,EAAoB;AAChBA,YAAAA,MAAM,CAACO,IAAP,CAAYT,OAAZ,EAAqBR,SAArB,EAAgC,CAACc,KAAD,EAAQY,OAAR,KAA4B;AACxD,kBAAIZ,KAAJ,EAAW;AACPE,gBAAAA,OAAO,CAACF,KAAR,CAAc,SAAd,EAAyBN,OAAzB;AACH,eAFD,MAGK;AACD,oBAAImB,MAAM,GAAGD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,IAAnB,CAAb;AACA,oBAAIC,aAAsB,GAAG,EAA7B;AACAA,gBAAAA,aAAa,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAUE,KAAV,CAAgB,IAAhB,CAAhB;;AACA,qBAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,MAAM,CAACK,MAA1B,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,sBAAIE,GAAG,GAAGN,MAAM,CAACI,CAAD,CAAN,CAAUF,KAAV,CAAgB,IAAhB,CAAV;;AACA,sBAAGI,GAAG,IAAI,IAAP,IAAeN,MAAM,CAACI,CAAD,CAAN,IAAa,EAA/B,EAAmC;AAC/B,wBAAIG,GAAO,GAAG,EAAd;;AACA,yBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,GAAG,CAACD,MAAhC,EAAwCG,KAAK,EAA7C,EAAiD;AAC7C,0BAAIC,OAAO,GAAGN,aAAa,CAACK,KAAD,CAAb,CAAqBE,IAArB,EAAd;;AACA,0BAAID,OAAO,IAAI,IAAf,EAAqB;AACjBF,wBAAAA,GAAG,CAACE,OAAD,CAAH,GAAeE,QAAQ,CAACL,GAAG,CAACE,KAAD,CAAJ,CAAvB;AACH,uBAFD,MAGK;AACDD,wBAAAA,GAAG,CAACE,OAAD,CAAH,GAAeH,GAAG,CAACE,KAAD,CAAlB;AACH;AACJ;;AACDV,oBAAAA,WAAW,CAACc,IAAZ,CAAiBL,GAAjB;AACAlB,oBAAAA,OAAO,CAACM,GAAR,CAAY,KAAZ,EAAmBG,WAAW,CAACA,WAAW,CAACO,MAAZ,GAAqB,CAAtB,CAA9B;AACH;AACJ;;AAED,uBAAOP,WAAP;AACH;AACJ,aA5BD;AA6BH;;AAED,iBAAOA,WAAP;AACH;;AAjG6C,O,UAChCpB,Q,GAAsB,I","sourcesContent":["import { _decorator, Component, assetManager, Sprite, SpriteFrame, Prefab, TextAsset, loader } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass\nexport default class ResManager extends Component {\n    public static Instance:ResManager = null!;\n\n    onLoad() {\n        ResManager.Instance = this;\n    }\n\n    LoadSprite(bundleName:string, resName:string, spriteNode:Sprite) {\n        let bundle = assetManager.getBundle(bundleName);\n        let strResName = resName + \"\";\n        if (bundle == null) {\n            assetManager.loadBundle(bundleName, (error, any)=>{\n                if (error) {\n                    console.error(\"bundle载入错误:\", bundleName);\n                }\n                else {\n                    this.LoadSprite(bundleName, strResName, spriteNode);\n                }\n            });\n        }\n        else {\n            bundle.load(strResName, SpriteFrame, (error, sprite:SpriteFrame)=>{\n                if (error) {\n                    console.error(\"sprite载入错误:\", bundleName, strResName);\n                }\n                else {\n                    spriteNode.spriteFrame = sprite;\n                }\n            })\n        }\n    }\n    \n    LoadPrefab(bundleName:string, resName:string, callback:any) {\n        let bundle = assetManager.getBundle(bundleName);\n        if (bundle == null) {\n            assetManager.loadBundle(bundleName, (error, any)=>{\n                if (error) {\n                    console.error(\"载入错误:\", bundleName);\n                }\n                else {\n                    console.log(\"载入bundle包\", bundleName);\n                    \n                    this.LoadPrefab(bundleName, resName, callback);\n                }\n            });\n        }\n        else {\n            bundle.load(resName, Prefab, (error, prefab:Prefab)=>{\n                if (error) {\n                    console.error(\"载入错误:\", bundleName, resName);\n                }\n                else {\n                    if (callback != null) {\n                        console.log(\"载入预制体成功，回调\", resName);\n                        callback(prefab);\n                    }\n                }\n            })\n        }\n    }\n\n    LoadConfig(resName:string) {\n        let listConfigs:any[] = [];\n        let bundle = assetManager.getBundle(\"Config\");\n        if (bundle != null) {\n            bundle.load(resName, TextAsset, (error, content:TextAsset)=>{\n                if (error) {\n                    console.error(\"配置载入错误:\", resName);\n                }\n                else {\n                    var mapArr = content.text.split(\"\\n\")  \n                    let listPropertys:string[] = [];\n                    listPropertys = mapArr[1].split(\"\\t\");\n                    for(var i = 2; i < mapArr.length;i++) {\n                        var arr = mapArr[i].split(\"\\t\")\n                        if(arr != null && mapArr[i] != \"\") {\n                            let obj:any = {};  \n                            for (let index = 0; index < arr.length; index++) {\n                                let arrName = listPropertys[index].trim();\n                                if (arrName == \"id\") {\n                                    obj[arrName] = parseInt(arr[index]);\n                                }\n                                else {\n                                    obj[arrName] = arr[index];\n                                }\n                            }\n                            listConfigs.push(obj);\n                            console.log(\"配置：\", listConfigs[listConfigs.length - 1]);\n                        }\n                    } \n\n                    return listConfigs;\n                }\n            })\n        }\n\n        return listConfigs;\n    }\n}"]}