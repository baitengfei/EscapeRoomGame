{"version":3,"sources":["file:///Users/baitengfei/code/EscapeRoom/EscapeRoomMVP/assets/Scripts/Config/CfgUtil.ts"],"names":["_decorator","SingletonClass","ccclass","property","CfgUtil","mCfgMap","mList_UICfgs","ins","loadCfgOver","cfgMap","getUICfg","id","Cfg","list","k","getCfg","cfgName","getCfgList"],"mappings":";;;;;;;;;;;;;;;;AAGSA,MAAAA,U,OAAAA,U;;AAFFC,MAAAA,c;;;;;;;;;OAGD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;yBAGjBI,O,WADZF,OAAO,CAAC,SAAD,C,gBAAR,MACaE,OADb;AAAA;AAAA,4CAC4C;AAAA;AAAA;AAAA,eACxCC,OADwC,GAC1B,IAD0B;AAAA,eAMxCC,YANwC,GAMnB,EANmB;AAAA;;AAE9B,eAAHC,GAAG,GAAG;AACT,iBAAO,MAAMA,GAAN,EAAP;AACH;;AAIDC,QAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,eAAKJ,OAAL,GAAeI,MAAf;AACH;;AAEDC,QAAAA,QAAQ,CAACC,EAAD,EAAY;AAChB,cAAI,CAAC,KAAKN,OAAV,EAAmB;AACf;AACH;;AAED,cAAIO,GAAO,GAAG,EAAd;AACA,cAAIC,IAAI,GAAG,KAAKR,OAAL,CAAa,IAAb,CAAX;;AACA,eAAK,IAAIS,CAAT,IAAcD,IAAd,EAAoB;AAChB,gBAAIA,IAAI,CAACC,CAAD,CAAJ,CAAQH,EAAR,IAAcA,EAAlB,EAAsB;AAClBC,cAAAA,GAAG,GAAGC,IAAI,CAACC,CAAD,CAAV;AACA;AACH;AACJ;;AAED,iBAAOF,GAAP;AACH;;AAEDG,QAAAA,MAAM,CAACJ,EAAD,EAAYK,OAAZ,EAA4B;AAC9B,cAAI,CAAC,KAAKX,OAAV,EAAmB;AACf;AACH;;AAED,cAAIO,GAAO,GAAG,EAAd;AACA,cAAIC,IAAI,GAAG,KAAKR,OAAL,CAAaW,OAAb,CAAX;;AACA,eAAK,IAAIF,CAAT,IAAcD,IAAd,EAAoB;AAChB,gBAAIA,IAAI,CAACC,CAAD,CAAJ,CAAQH,EAAR,IAAcA,EAAlB,EAAsB;AAClBC,cAAAA,GAAG,GAAGC,IAAI,CAACC,CAAD,CAAV;AACA;AACH;AACJ;;AAED,iBAAOF,GAAP;AACH;;AAEDK,QAAAA,UAAU,CAACD,OAAD,EAAiB;AACvB,cAAI,CAAC,KAAKX,OAAV,EAAmB;AACf;AACH;;AAED,cAAIQ,IAAI,GAAG,KAAKR,OAAL,CAAaW,OAAb,CAAX;AAEA,iBAAOH,IAAP;AACH;;AAtDuC,O","sourcesContent":["//加载和获取不同类型的游戏配置数据。\nimport SingletonClass from '../Base/SingletonClass';\n\nimport { _decorator, Component } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CfgUtil')\nexport class CfgUtil extends SingletonClass {\n    mCfgMap:any = null;\n    static ins() {\n        return super.ins() as CfgUtil;\n    }\n\n    mList_UICfgs:any[] = [];\n\n    loadCfgOver(cfgMap) {\n        this.mCfgMap = cfgMap;\n    }\n\n    getUICfg(id:number) {\n        if (!this.mCfgMap) {\n            return;\n        }\n        \n        let Cfg:any = {};\n        let list = this.mCfgMap['UI'];\n        for (let k in list) {\n            if (list[k].id == id) {\n                Cfg = list[k];\n                break;\n            }\n        }\n        \n        return Cfg;\n    }\n\n    getCfg(id:number, cfgName:string) {\n        if (!this.mCfgMap) {\n            return;\n        }\n        \n        let Cfg:any = {};\n        let list = this.mCfgMap[cfgName];\n        for (let k in list) {\n            if (list[k].id == id) {\n                Cfg = list[k];\n                break;\n            }\n        }\n        \n        return Cfg;\n    }\n\n    getCfgList(cfgName:string) {\n        if (!this.mCfgMap) {\n            return;\n        }\n        \n        let list = this.mCfgMap[cfgName];\n        \n        return list;\n    }\n}\n\n"]}