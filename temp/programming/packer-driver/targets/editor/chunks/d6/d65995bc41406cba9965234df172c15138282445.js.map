{"version":3,"sources":["file:///Users/baitengfei/code/EscapeRoom/EscapeRoomMVP/assets/Scripts/Tool/Tools.ts"],"names":["_decorator","Component","ccclass","property","Tools","Random","min","max","Math","floor","random","getTimeStamp","date","Date","round","getTime","getTimeStampLong","IsNewDay","lastTime","lastDate","setTime","getDate","getTimeFormat","time","minite","second","getTimeFormatLong","hour","lastValue","getInTime","start","end","getHours","getMinutes"],"mappings":"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","sourcesContent":["//done\n\nimport { _decorator, Component, Node } from 'cc';\nimport { CfgUtil } from '../Config/CfgUtil';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Tools')\nexport class Tools extends Component {\n   // 取随机值 min <= value < max\n   static Random(min:number, max:number) {\n        if (min >= max)\n        {\n            return min;\n        }\n        return Math.floor(Math.random()*(max - min)) + min;\n    }\n\n    // 获取时间戳\n    static getTimeStamp() {\n        let date:Date = new Date();\n        return Math.round(date.getTime() / 1000);\n    }\n\n    // 毫秒时间戳\n    static getTimeStampLong() {\n        let date:Date = new Date();\n        return date.getTime();\n    }\n\n    // 检测是否跨天\n    static IsNewDay(lastTime:number) {\n        let date:Date = new Date();\n        let lastDate:Date = new Date();\n        lastDate.setTime(lastTime * 1000);\n\n        //console.log(\"当前：\", date.getDate());\n        //console.log(\"过去：\", lastDate.getDate());\n        if (date.getDate() != lastDate.getDate()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    // 转换为分钟格式\n    static getTimeFormat(time:number) {\n        let minite:number = Math.floor(time / 60);\n        let second:number = time % 60;\n        return (minite < 10 ? \"0\" : \"\") + minite + \":\" + (second < 10 ? \"0\" : \"\") + second;\n    }\n    // 转换为小时分钟格式\n    static getTimeFormatLong(time:number) {\n        let hour:number = Math.floor(time / 3600);\n        let lastValue = time % 3600;\n        let minite:number = Math.floor(lastValue / 60);\n        let second:number = lastValue % 60;\n        return (hour < 10 ? \"0\" : \"\") + hour + \":\" + (minite < 10 ? \"0\" : \"\") + minite + \":\" + (second < 10 ? \"0\" : \"\") + second;\n    }\n\n    // 获取白天还是黑夜\n    static getInTime(start, end) {\n        let date:Date = new Date();\n        let hour = date.getHours();\n        let minite = date.getMinutes();\n        if (hour >= start && hour < end)\n        {\n            return 0;\n        }\n        if (hour < start) {\n            return -1;\n        }\n        if (hour >= end) {\n            return 1;\n        }\n    }\n\n}\n\n"]}