{"version":3,"sources":["file:///Users/baitengfei/code/EscapeRoom/EscapeRoomMVP/assets/Scripts/Base/UIBase.ts"],"names":["_decorator","Component","Label","Toggle","Sprite","UIManager","ccclass","property","UIBase","args","addListener","bDestroyMode","type","_init","onStart","refreshBase","refresh","close","Instance","closeUI","getNode","name","node","returnNode","childNode","getChildByPath","getLabel","label","temp","getComponent","getToggle","tog","getSprite","sprite"],"mappings":"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","sourcesContent":["\n//UI 组件基类，其中包含了一些用于获取节点和组件如Sprite/Label等的方法，以及刷新 UI 内容的基本结构。其他具体的 UI 组件可以继承自这个基类，并在其基础上实现特定的 UI 行为和功能。\n\nimport { UIType, UIManager } from \"../Manager/UIManager\";\n\nimport { _decorator, Component, Label, Node, Toggle, Sprite } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIBase')\nexport class UIBase extends Component {\n    //用于传递给 UI 组件的参数\n    args: any;\n    addListener: any;\n\n    bDestroyMode:boolean = false;\n    type:UIType = 0;\n\n    _init() {\n        \n    }\n\n    //实例化调用一次\n    onStart() {\n\n    }\n\n    //刷新 UI 内容\n    refreshBase(args:any=null) {\n        this.args = args;\n        //log(\" refresh base \",args);\n        if (typeof (this.refresh) == \"function\") {\n            this.refresh();\n        }\n        if (typeof (this.addListener) == \"function\") {\n            this.addListener();\n        }\n    }\n    refresh() { }\n\n    close() {\n        UIManager.Instance.closeUI(this.type);\n    }\n\n    getNode(name:string, node:Node = null!) {\n        if (node == null) {\n            node = this.node;\n        }\n\n        let returnNode:Node = null!;\n        let childNode = node.getChildByPath(name);\n        if (childNode != null) {\n            returnNode = childNode;\n        }\n        \n        return returnNode;\n    }\n    \n    getLabel(name:string, node:Node = null!) {\n        if (node == null) {\n            node = this.node;\n        }\n        let label:Label =  null!;\n        let childNode = node.getChildByPath(name);\n        if (childNode != null) {\n            let temp = childNode.getComponent(Label);\n            if (temp != null) {\n                label = temp;\n            }\n        }\n        \n        return label;\n    }\n\n    getToggle(name:string) {\n        let tog:Toggle =  null!;\n        let childNode = this.node.getChildByPath(name);\n        if (childNode != null) {\n            let temp = childNode.getComponent(Toggle);\n            if (temp != null) {\n                tog = temp;\n            }\n        }\n        \n        return tog;\n    }\n\n    getSprite(name:string, node:Node = null!) {\n        if (node == null) {\n            node = this.node;\n        }\n        let sprite:Sprite =  null!;\n        let childNode = node.getChildByPath(name);\n        if (childNode != null) {\n            let temp = childNode.getComponent(Sprite);\n            if (temp != null) {\n                sprite = temp;\n            }\n        }\n        \n        return sprite;\n    }\n}\n"]}